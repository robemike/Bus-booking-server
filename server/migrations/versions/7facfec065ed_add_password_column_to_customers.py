from sqlalchemy import text
"""Add password column to customers

Revision ID: 7facfec065ed
Revises: 
Create Date: 2024-08-07 15:58:35.297949

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7facfec065ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    from sqlalchemy import text

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # For 'admins' table
    with op.batch_alter_table('admins', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(), nullable=True))  # Allow NULL initially
        batch_op.drop_column('password_hash')

    # For 'bookings' table
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.alter_column('total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)

    # For 'buses' table
    with op.batch_alter_table('buses', schema=None) as batch_op:
        batch_op.alter_column('number_plate',
               existing_type=sa.VARCHAR(),
               nullable=True)

    # For 'customers' table
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(), nullable=True))  # Allow NULL initially
        batch_op.drop_column('password_hash')

    # For 'drivers' table
    with op.batch_alter_table('drivers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(), nullable=True))  # Allow NULL initially
        batch_op.drop_column('password_hash')

    # After adding columns, update existing records with a default value
    connection = op.get_bind()
    connection.execute(text("UPDATE admins SET password = 'default_password'"))
    connection.execute(text("UPDATE customers SET password = 'default_password'"))
    connection.execute(text("UPDATE drivers SET password = 'default_password'"))

    # Now alter the columns to NOT NULL
    with op.batch_alter_table('admins', schema=None) as batch_op:
        batch_op.alter_column('password', nullable=False)

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.alter_column('password', nullable=False)

    with op.batch_alter_table('drivers', schema=None) as batch_op:
        batch_op.alter_column('password', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('drivers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_column('password')

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_column('password')

    with op.batch_alter_table('buses', schema=None) as batch_op:
        batch_op.alter_column('number_plate',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.alter_column('total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('admins', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_column('password')

    # ### end Alembic commands ###
